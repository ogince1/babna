const { createClient } = require('@supabase/supabase-js');

console.log('üîç V√âRIFICATION DU PROFIL UTILISATEUR');
console.log('=====================================');
console.log('');

// Configuration Supabase (utilisez votre cl√© anon)
const supabaseUrl = 'https://ubanmapcosqapprxkjld.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InViYW5tYXBjb3NxYXBwcnhramxkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzUyOTcyOTAsImV4cCI6MjA1MDg3MzI5MH0.8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c8c';

console.log('üîó Connexion √† Supabase...');
const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function checkUserProfile() {
  try {
    const userId = '9a800006-aed1-435b-a0dc-de07c697bc12';
    
    console.log(`üìù V√©rification du profil pour l'utilisateur: ${userId}`);
    console.log('');
    
    // Test 1: V√©rifier si l'utilisateur existe dans auth.users
    console.log('üîç Test 1: V√©rification dans auth.users...');
    const { data: authUser, error: authError } = await supabase.auth.admin.getUserById(userId);
    
    if (authError) {
      console.log('‚ùå Erreur auth:', authError.message);
    } else {
      console.log('‚úÖ Utilisateur trouv√© dans auth.users:', authUser.user?.email);
    }
    
    console.log('');
    
    // Test 2: V√©rifier le profil dans public.users avec select explicite
    console.log('üîç Test 2: V√©rification dans public.users (select explicite)...');
    const { data: profile, error: profileError } = await supabase
      .from('users')
      .select('id, name, email, role, phone, avatar_url, whatsapp, created_at, updated_at')
      .eq('id', userId)
      .single();
    
    if (profileError) {
      console.log('‚ùå Erreur profil (select explicite):', profileError.message);
      console.log('   Code:', profileError.code);
      console.log('   D√©tails:', profileError.details);
    } else {
      console.log('‚úÖ Profil trouv√© avec select explicite:', profile);
    }
    
    console.log('');
    
    // Test 3: V√©rifier avec select('*')
    console.log('üîç Test 3: V√©rification avec select("*")...');
    const { data: profileAll, error: profileAllError } = await supabase
      .from('users')
      .select('*')
      .eq('id', userId)
      .single();
    
    if (profileAllError) {
      console.log('‚ùå Erreur profil (select *):', profileAllError.message);
      console.log('   Code:', profileAllError.code);
      console.log('   D√©tails:', profileAllError.details);
    } else {
      console.log('‚úÖ Profil trouv√© avec select("*"):', profileAll);
    }
    
    console.log('');
    
    // Test 4: V√©rifier la structure de la table
    console.log('üîç Test 4: V√©rification de la structure de la table...');
    const { data: columns, error: columnsError } = await supabase
      .from('users')
      .select('*')
      .limit(0);
    
    if (columnsError) {
      console.log('‚ùå Erreur structure:', columnsError.message);
    } else {
      console.log('‚úÖ Structure de la table accessible');
    }
    
  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error.message);
  }
}

// Ex√©cuter la v√©rification
checkUserProfile();
